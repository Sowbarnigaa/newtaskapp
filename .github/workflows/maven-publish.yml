name: Maven Package

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
   
jobs:
   # paths-filter:
   #  runs-on: ubuntu-latest
   #  outputs:
   #    output1: ${{ steps.filter.outputs.workflows }}
   #  steps:
   #  - uses: actions/checkout@v2
   #  - uses: dorny/paths-filter@v2
   #    id: filter
   #    with:
   #      filters: |
   #        workflows:
   #          - 'MyApp/**'
   
   #  - name: workflow tests
   #    if: steps.filter.outputs.workflows == 'true'
   #    run: echo "MyApp file editted"

 
   #  - name: not workflow tests
   #    if: steps.filter.outputs.workflows != 'true'
   #    run: echo "taskappfe file editted"
 
          
  checkout-code:
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v4
        - name: Check commit folder
          run: |
            # Retrieve modified files from the commit
            files_changed=$(git diff --name-only HEAD^..HEAD)
  
            # Iterate through the list of modified files
            for file in $files_changed; do
              # Check if the file is in the MyApp folder
              if [[ $file == "MyApp/"* ]]; then
                echo "Changes detected in the MyApp folder"
                # Set an output variable to indicate changes in MyApp
                echo "::set-output name=folder::MyApp"
                # Exit the loop since we found a match
                exit 0
              fi
  
              # Check if the file is in the taskappfe folder
              if [[ $file == "taskappfe/"* ]]; then
                echo "Changes detected in the taskappfe folder"
                # Set an output variable to indicate changes in taskappfe
                echo "::set-output name=folder::taskappfe"
                # Exit the loop since we found a match
                exit 0
              fi
            done
  
            # If no changes are found in either folder, exit with an error
            echo "No changes detected in the specified folders"
            exit 1
            
  integration-unit-test:
        needs: [checkout-code]
        runs-on: ubuntu-latest
        
            
        if: ${{ needs.check_commit_folder.outputs.folder == 'MyApp' }}
        services:
          elasticsearch:
            image: docker.elastic.co/elasticsearch/elasticsearch:8.8.1
            env:
              discovery.type: single-node
              xpack.security.enabled: false
            options: >-
              --health-cmd "curl -f http://localhost:9200"
              --health-interval 20s
              --health-timeout 5s
              --health-retries 5 
            ports:
              - "9200:9200"
              - "9300:9300"
        steps: 
           - uses: actions/checkout@v4
           - name: Set up JDK 21
             uses: actions/setup-java@v4
             with:
                java-version: '21'
                distribution: 'temurin'
           - name: Run unit tests
             run: mvn test --file ./MyApp/pom.xml
          
  build_backend:
     runs-on: ubuntu-latest
     needs: [integration-unit-test]
     if: ${{ needs.check_commit_folder.outputs.folder == 'MyApp' }}
     steps:
        - uses: actions/checkout@v4
        - name: Set up JDK 21
          uses: actions/setup-java@v4
          with:
                java-version: '21'
                distribution: 'temurin'
        - name: Build with Maven
          run: |
           mvn -B package --file ./MyApp/pom.xml -DskipTests
           # cd MyApp
           # mvn --batch-mode --update-snapshots verify
           
        - name: build spring boot image
          run: docker build -t spring-app .
    
        - name: display spring-app image
          run: docker images
          
        - name: Login to Docker Hub
          uses: docker/login-action@v3
          with:
                  registry: docker.io
                  username:  ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}
    
        - name: Build and push Backend Docker image
          uses: docker/build-push-action@v4
          with:
                  context: .
                  file: ./Dockerfile
                  push: true
                  tags: sowbarnigaa/backrepo:1

  build_frontend:
    name: frontend
    runs-on: ubuntu-latest
    needs: [build_backend]
    if: ${{ needs.check_commit_folder.outputs.folder == 'taskappfe' }}
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
        
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'v20.11.0'

      - name: build angular image
        run: |
          cd taskappfe
          docker build -t angular-app .
      - name: display spring-app image
        run: docker images
        
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username:  ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./taskappfe
          file: ./taskappfe/Dockerfile
          push: true
          tags: sowbarnigaa/frontrepo:1
        
  deploy:
    runs-on: self-hosted
    needs: [build_frontend,build_backend]
    steps:
      - uses: actions/checkout@v4
 
      - name: Login to  Docker hub
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
 
      - name: check images
        run: docker images
      - name: build elastic search image
        run: docker pull docker.elastic.co/elasticsearch/elasticsearch:8.8.1
 
      - name: build springboot image
        run: docker pull sowbarnigaa/backrepo:latest
 
      - name: build angular image
        run: docker pull sowbarnigaa/frontrepo:latest
 
 
      - name: docker compose
        run: docker-compose -f ./MyApp/docker-compose.yaml up -d
          
  
